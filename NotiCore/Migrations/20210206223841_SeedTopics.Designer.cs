// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotiCore.API.Models.DataContext;

namespace NotiCore.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210206223841_SeedTopics")]
    partial class SeedTopics
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Authors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScrapedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Sent")
                        .HasColumnType("bit");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ArticleId");

                    b.HasIndex("SourceId");

                    b.HasIndex("TopicId");

                    b.HasIndex("Url", "SourceId", "TopicId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Language", b =>
                {
                    b.Property<int>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("LanguageId");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Source", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SourceId");

                    b.HasIndex("LanguageId");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.SourceSubscription", b =>
                {
                    b.Property<int>("SourceSubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SourceId")
                        .HasColumnType("int");

                    b.Property<int>("SubcriberId")
                        .HasColumnType("int");

                    b.Property<int?>("SubscriberId")
                        .HasColumnType("int");

                    b.HasKey("SourceSubscriptionId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SubscriberId");

                    b.ToTable("SourceSubscriptions");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Subscriber", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("HasAuthorized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("SubscriberId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("TopicId");

                    b.ToTable("Topic");

                    b.HasData(
                        new
                        {
                            TopicId = 1,
                            Description = "Tech",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 2,
                            Description = "News",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 3,
                            Description = "Business",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 4,
                            Description = "Science",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 5,
                            Description = "Finance",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 6,
                            Description = "Food",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 7,
                            Description = "Politics",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 8,
                            Description = "Economics",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 9,
                            Description = "Travel",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 10,
                            Description = "Entertainment",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 11,
                            Description = "Music",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 12,
                            Description = "Sport",
                            IsActive = true
                        },
                        new
                        {
                            TopicId = 13,
                            Description = "World",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.TopicSubscription", b =>
                {
                    b.Property<int>("TopicSubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SubscriberId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("TopicSubscriptionId");

                    b.HasIndex("SubscriberId");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicSubscriptions");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Article", b =>
                {
                    b.HasOne("NotiCore.API.Models.DataContext.Source", "Source")
                        .WithMany("Articles")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotiCore.API.Models.DataContext.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Source", b =>
                {
                    b.HasOne("NotiCore.API.Models.DataContext.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.SourceSubscription", b =>
                {
                    b.HasOne("NotiCore.API.Models.DataContext.Source", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotiCore.API.Models.DataContext.Subscriber", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId");

                    b.Navigation("Source");

                    b.Navigation("Subscriber");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.TopicSubscription", b =>
                {
                    b.HasOne("NotiCore.API.Models.DataContext.Subscriber", "Subscriber")
                        .WithMany()
                        .HasForeignKey("SubscriberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NotiCore.API.Models.DataContext.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscriber");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("NotiCore.API.Models.DataContext.Source", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
